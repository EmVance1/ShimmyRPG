#!SET_OR_CREATE

# a = 0
# b = 1
# for i in 0..5 {
#     temp = a + b
#     a = b
#     b = temp
# }


entry(default) = ShimmyPrime: [ "" ] => {
    "" => loop{ i: =0, a: =0, b: =1 },
}

loop = ShimmyPrime: [ "loop" ] => {
    (i <  5)"" => dup{ sum_a: =0, sum_b: =0, i: +1, dup_state: =0, prop_state: =0, dup_temp: =0 },
    (i == 5)"" => exit,
}

dup = ShimmyPrime: [ "dup" ] => {
    (dup_state == 0 & a >  0)       "" => dup{ a: -1, sum_a: +1 },
    (dup_state == 0 & a == 0)       "" => dup{ dup_state: =1 },
    (dup_state == 1 & b >  0)       "" => dup{ b: -1, dup_temp: +1, sum_b: +1 },
    (dup_state == 1 & b == 0)       "" => dup{ dup_state: =2 },
    (dup_state == 2 & dup_temp >  0)"" => dup{ dup_temp: -1, b: +1 },
    (dup_state == 2 & dup_temp == 0)"" => sum,
}

sum = ShimmyPrime: [ "sum" ] => {
    (sum_a >  0)"" => sum{ sum_a: -1, sum_b: +1 },
    (sum_a == 0)"" => prop{ a: =0 },
}

prop = ShimmyPrime: [ "prop" ] => {
    (prop_state == 0 & b >  0)    "" => prop{ b: -1, a: +1 },
    (prop_state == 0 & b == 0)    "" => prop{ prop_state: =1 },
    (prop_state == 1 & sum_b >  0)"" => prop{ sum_b: -1, b: +1 },
    (prop_state == 1 & sum_b == 0)"" => loop,
}

